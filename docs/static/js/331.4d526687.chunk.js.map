{"version":3,"file":"static/js/331.4d526687.chunk.js","mappings":"2LAAAA,EAAAA,EAAAA,KAMO,IAAMC,EAAN,cAAqBC,EAAAA,EAG1BC,WAAAA,CAAYC,GACVC,MAAMD,GACNE,KAAKC,QAAeC,EAAAA,QAAQJ,GACpBK,EAAAA,WAAgBD,EAAAA,KAAKF,KAAKC,WAC7BE,EAAAA,UAAUH,KAAKC,QAEtB,CAEA,UAAMG,CAAKN,EAAYO,GACrB,OAAAL,KAAKM,GAAKR,EAYH,CAAES,gBAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAVJH,GAAA,IACHI,OAAQ,IACFJ,EAAKI,QAAU,GAClBC,IACC,IAAMC,EAASD,EAAIE,GAAGC,YAAYC,OAClCJ,EAAIE,GAAGG,MAAMC,EAAAA,GACbN,EAAIE,GAAGK,MAAMN,EAAQ,CAAEO,KAAMlB,KAAKC,SAAWe,EAAAA,OAKrD,CAEA,aAAMG,GACJnB,KAAKM,GAAIc,OAAOR,GAAGS,MACrB,E","sources":["../node_modules/@electric-sql/pglite/src/fs/nodefs.ts"],"sourcesContent":["import * as fs from 'fs'\nimport * as path from 'path'\nimport { EmscriptenBuiltinFilesystem, PGDATA } from './base.js'\nimport type { PostgresMod } from '../postgresMod.js'\nimport { PGlite } from '../pglite.js'\n\nexport class NodeFS extends EmscriptenBuiltinFilesystem {\n  protected rootDir: string\n\n  constructor(dataDir: string) {\n    super(dataDir)\n    this.rootDir = path.resolve(dataDir)\n    if (!fs.existsSync(path.join(this.rootDir))) {\n      fs.mkdirSync(this.rootDir)\n    }\n  }\n\n  async init(pg: PGlite, opts: Partial<PostgresMod>) {\n    this.pg = pg\n    const options: Partial<PostgresMod> = {\n      ...opts,\n      preRun: [\n        ...(opts.preRun || []),\n        (mod: any) => {\n          const nodefs = mod.FS.filesystems.NODEFS\n          mod.FS.mkdir(PGDATA)\n          mod.FS.mount(nodefs, { root: this.rootDir }, PGDATA)\n        },\n      ],\n    }\n    return { emscriptenOpts: options }\n  }\n\n  async closeFs(): Promise<void> {\n    this.pg!.Module.FS.quit()\n  }\n}\n"],"names":["n","m","p","constructor","t","super","this","rootDir","o","s","init","e","pg","emscriptenOpts","_objectSpread","preRun","r","c","FS","filesystems","NODEFS","mkdir","i","mount","root","closeFs","Module","quit"],"sourceRoot":""}