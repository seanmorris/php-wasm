name: Build Artifacts
on: [push]
jobs:
  build-libs:
    name: Build Shared Objects
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Install NPM packages
        run: npm install

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Import configuration
        run: cp .github/.env_8.4.ci .env

      - name: Create build-environment image
        run: time make image

      - name: Spin up docker-network
        run: docker network create phpwasm_default

      - name: Build shared libraries
        run: time make dynamic

      - name: Cache executables
        run: find ./third_party -type f -executable -print > ./.cache/executables.list

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-dependencies
          include-hidden-files: true
          path: |
            third_party
            lib
            packages
            .cache

  build-8-4:
    name: Build 8.4
    runs-on: ubuntu-latest
    needs: [build-libs]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: php-dependencies
          path: ./

      - name: Apply executable cache
        run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

      - name: Install NPM packages
        run: npm install

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Import configuration
        run: cp .github/.env_8.4.ci .env

      - name: Create build-environment image
        run: time make image

      - name: Spin up docker network
        run: docker network create phpwasm_default

      - name: Build PHP
        run: time make PHP_VERSION=8.4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-wasm-8.4
          include-hidden-files: true
          path: packages/

  build-8-3:
      name: Build 8.3
      runs-on: ubuntu-latest
      needs: [build-libs]
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Disable man-db auto-update
          run: |
            echo "set man-db/auto-update false" | sudo debconf-communicate
            sudo dpkg-reconfigure man-db

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-dependencies
            path: ./

        - name: Apply executable cache
          run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

        - name: Install NPM packages
          run: npm install

        - name: Install docker-compose
          run: sudo apt update && sudo apt install docker-compose -y

        - name: Import configuration
          run: cp .github/.env_8.3.ci .env

        - name: Create build-environment image
          run: time make image

        - name: Spin up docker network
          run: docker network create phpwasm_default

        - name: Build PHP
          run: time make PHP_VERSION=8.3

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: php-wasm-8.3
            include-hidden-files: true
            path: packages/

  build-8-2:
      name: Build 8.2
      runs-on: ubuntu-latest
      needs: [build-libs]
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Disable man-db auto-update
          run: |
            echo "set man-db/auto-update false" | sudo debconf-communicate
            sudo dpkg-reconfigure man-db

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-dependencies
            path: ./

        - name: Apply executable cache
          run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

        - name: Install NPM packages
          run: npm install

        - name: Install docker-compose
          run: sudo apt update && sudo apt install docker-compose -y

        - name: Import configuration
          run: cp .github/.env_8.2.ci .env

        - name: Create build-environment image
          run: time make image

        - name: Spin up docker network
          run: docker network create phpwasm_default

        - name: Build PHP
          run: time make PHP_VERSION=8.2

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: php-wasm-8.2
            include-hidden-files: true
            path: packages/

  build-8-1:
      name: Build 8.1
      runs-on: ubuntu-latest
      needs: [build-libs]
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Disable man-db auto-update
          run: |
            echo "set man-db/auto-update false" | sudo debconf-communicate
            sudo dpkg-reconfigure man-db

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-dependencies
            path: ./

        - name: Apply executable cache
          run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

        - name: Install NPM packages
          run: npm install

        - name: Install docker-compose
          run: sudo apt update && sudo apt install docker-compose -y

        - name: Import configuration
          run: cp .github/.env_8.1.ci .env

        - name: Create build-environment image
          run: time make image

        - name: Spin up docker network
          run: docker network create phpwasm_default

        - name: Build PHP
          run: time make PHP_VERSION=8.1

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: php-wasm-8.1
            include-hidden-files: true
            path: packages/

  build-8-0:
      name: Build 8.0
      runs-on: ubuntu-latest
      needs: [build-libs]
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Disable man-db auto-update
          run: |
            echo "set man-db/auto-update false" | sudo debconf-communicate

            sudo dpkg-reconfigure man-db
        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-dependencies
            path: ./

        - name: Apply executable cache
          run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

        - name: Install NPM packages
          run: npm install

        - name: Install docker-compose
          run: sudo apt update && sudo apt install docker-compose -y

        - name: Import configuration
          run: cp .github/.env_8.0.ci .env

        - name: Create build-environment image
          run: time make image

        - name: Spin up docker network
          run: docker network create phpwasm_default

        - name: Build PHP
          run: time make PHP_VERSION=8.0

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: php-wasm-8.0
            include-hidden-files: true
            path: packages/

  collect:
      name: Collect Artifacts
      runs-on: ubuntu-latest
      needs: [build-8-4, build-8-3, build-8-2, build-8-1, build-8-0]
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-wasm-8.4
            path: packages/

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-wasm-8.3
            path: packages/

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-wasm-8.2
            path: packages/

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-wasm-8.1
            path: packages/

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: php-wasm-8.0
            path: packages/

        - run: ./compress-package.sh packages/php-wasm
        - run: ./compress-package.sh packages/php-cgi-wasm
        - run: ./compress-package.sh packages/php-dbg-wasm

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: built-packages
            include-hidden-files: true
            path: packages/

  test-browser:
    name: Test Browser
    runs-on: ubuntu-latest
    needs: [collect]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: packages/

      - name: Install NPM packages
        run: npm install

      - name: Install Global NPM packages
        run: npm install -g deno cv3-test netcat

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Install Chrome's APT key
        run: wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

      - name: Install Chrome's APT source
        run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

      - name: Install Chrome
        run: sudo apt-get update && sudo apt install -y software-properties-common google-chrome-stable

      - name: Ensure the demo uses local packages
        run: cd demo-web; ./switch-packages.sh local; cd ..;

      - name: Import configuration
        run: cp .circleci/.env_8.3-dynamic.ci .env

      - name: Create build-environment image
        run: make image

      - name: Spin up docker network
        run: docker network create phpwasm_default

      - name: Run tests
        run: test/browser-test.sh
