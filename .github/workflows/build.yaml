name: Build Artifacts

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-libs:
    name: Build Shared Objects
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Install NPM packages
        run: npm ci

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Import configuration
        run: cp .github/.env_8.4.ci .env

      - name: Create build-environment image
        run: time make image

      - name: Spin up docker-network
        run: docker network create phpwasm_default

      - name: Build shared libraries
        run: time make dynamic

      - name: Cache executables
        run: find ./third_party -type f -executable -print > ./.cache/executables.list

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-dependencies
          include-hidden-files: true
          path: |
            third_party
            lib
            packages
            .cache

  build:
    name: Build ${{ matrix.phpVersion }}
    runs-on: ubuntu-latest
    needs: [build-libs]
    strategy:
      matrix:
        phpVersion: ['8.4', '8.3', '8.2', '8.1', '8.0']
        libType: ['dynamic', 'shared', 'static']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: php-dependencies
          path: ./

      - name: Apply executable cache
        run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

      - name: Install NPM packages
        run: npm ci

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Import configuration
        run: cp .github/.env_${{ matrix.phpVersion }}.${{ matrix.libType }}.ci .env

      - name: Create build-environment image
        run: time make image

      - name: Spin up docker network
        run: docker network create phpwasm_default

      - name: Build PHP
        run: time make PHP_VERSION=${{ matrix.phpVersion }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-wasm-${{ matrix.libType }}-${{ matrix.phpVersion }}
          include-hidden-files: true
          path: packages/

  collect:
      name: Collect Artifacts
      runs-on: ubuntu-latest
      needs: [build]
      strategy:
        matrix:
          libType: ['dynamic', 'shared', 'static']
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            pattern: php-wasm-${{ matrix.libType }}-*
            path: packages/
            merge-multiple: true

        - run: ./compress-package.sh packages/php-wasm
        - run: ./compress-package.sh packages/php-cgi-wasm
        - run: ./compress-package.sh packages/php-dbg-wasm

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: built-packages-${{ matrix.libType }}
            include-hidden-files: true
            path: packages/

  test-browser:
    name: Test Browser ${{ matrix.phpVersion }} ${{ matrix.libType }}
    runs-on: ubuntu-latest
    needs: [collect]
    strategy:
      matrix:
        phpVersion: ['8.4', '8.3', '8.2', '8.1', '8.0']
        libType: ['dynamic', 'shared', 'static']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: built-packages-${{ matrix.libType }}
          path: packages/

      - name: Install NPM packages
        run: npm ci

      - name: Install Global NPM packages
        run: npm install -g deno cv3-test netcat

      - name: Install docker-compose
        run: sudo apt update && sudo apt install docker-compose -y

      - name: Install Chrome's APT key
        run: wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

      - name: Install Chrome's APT source
        run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

      - name: Install Chrome
        run: sudo apt-get update && sudo apt install -y software-properties-common google-chrome-stable

      - name: Ensure the demo uses local packages
        run: cd demo-web; ./switch-packages.sh local; cd ..;

      - name: Import configuration
        run: cp .github/.env_${{ matrix.libType }}-dynamic.ci .env

      - name: Create build-environment image
        run: make image

      - name: Spin up docker network
        run: docker network create phpwasm_default

      - name: Run tests
        run: test/browser-test.sh

  test-node:
    name: Test Node ${{ matrix.phpVersion }} ${{ matrix.libType }}
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        phpVersion: ['8.4', '8.3', '8.2', '8.1', '8.0']
        libType: ['dynamic', 'shared', 'static']
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: php-wasm-${{ matrix.libType }}-*
          path: packages/
          merge-multiple: true

      - run: npm ci

      - run: npm install -g deno
      
      - name: Disable man-db auto-update
      - run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - run: sudo apt update && sudo apt install docker-compose -y

      - run: cp .github/.env_${{ matrix.phpVersion }}.ci .env

      - run: make image

      - run: docker network create phpwasm_default

      - run: PHP_VERSION=${{ matrix.phpVersion }} make test
