name: Test
on: [push]
jobs:
  test-browser:
    name: Test Browser
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: npm i -g cv3-test netcat
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      - run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      - run: sudo apt-get update
      - run: sudo apt install -y software-properties-common google-chrome-stable
      - run: cd demo-web; ./switch-packages.sh local; cd ..;
      - run: cp .circleci/.env_8.3-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make web-mjs worker-cgi-mjs web-dbg-mjs
      - run: test/browser-test.sh

  test-8-4-static:
    name: Test 8.4 Static
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.4.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-3-static:
    name: Test 8.3 Static
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.3.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-2-static:
    name: Test 8.2 Static
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.2.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.2

  test-8-1-static:
    name: Test 8.1 Static
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.1.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.1

  test-8-0-static:
    name: Test 8.0 Static
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.0.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.0


  test-8-4-dynamic:
    name: Test 8.4 Dynamic
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.4-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-3-dynamic:
    name: Test 8.3 Dynamic
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.3-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-2-dynamic:
    name: Test 8.2 Dynamic
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.2-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.2

  test-8-1-dynamic:
    name: Test 8.1 Dynamic
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.1-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.1

  test-8-0-dynamic:
    name: Test 8.0 Dynamic
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.0-dynamic.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.0


  test-8-4-shared:
    name: Test 8.4 Shared
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.4-shared.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-3-shared:
    name: Test 8.3 Shared
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.3-shared.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test

  test-8-2-shared:
    name: Test 8.2 Shared
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.2-shared.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.2

  test-8-1-shared:
    name: Test 8.1 Shared
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.1-shared.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.1

  test-8-0-shared:
    name: Test 8.0 Shared
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm install
      - run: npm install -g deno
      - run: sudo apt update && sudo apt install docker-compose -y
      - run: cp .circleci/.env_8.0-shared.ci .env
      - run: make image
      - run: docker network create phpwasm_default
      - run: make test PHP_VERSION=8.0
