name: Build Step

on:
  workflow_call:
    inputs:
      phpVersion:
        required: true
        type: string
      envTarget:
        required: true
        type: string
      libType:
        required: true
        type: string

jobs:
  build:
    name: Build PHP ${{ inputs.phpVersion }} ${{ inputs.libType }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Import configuration
        run: |
          cp -p .github/.env_${{ inputs.phpVersion }}.${{ inputs.libType }}.ci .env
          touch -d '1970-01-01 00:00:00 UTC' .env

      - name: Disable man-db auto-update
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: php-dependencies
          path: ./

      - name: Apply executable cache
        run: cat ./.cache/executables.list | xargs -I{} chmod +x {}

      - name: Install NPM packages
        run: npm ci

      - name: Install deps
        run: sudo apt update && sudo apt install coreutils docker-compose -y

      - name: Cache Docker image
        id: cache-docker-image
        uses: actions/cache@v3
        with:
          path: /tmp/builder-image.tar
          key: ${{ runner.os }}-docker-${{ hashFiles('emscripten-builder.dockerfile') }}

      - name: Load builder image if cached
        if: steps.cache-docker-image.outputs.cache-hit == 'true'
        run: docker load -i /tmp/builder-image.tar

      - name: Create builder image (if not cached)
        if: steps.cache-docker-image.outputs.cache-hit != 'true'
        run: |
          time make image
          docker save -o /tmp/builder-image.tar seanmorris/php-emscripten-builder:latest

      - name: Spin up docker network
        run: docker network create phpwasm_default

      - name: Apply mtime cache
        run: |
          while read -r PATH MTIME; do
            [[ -f "${PATH}" ]] && /usr/bin/touch -d "@${MTIME}" "${PATH}"
          done < ./.cache/.mtimes

      - name: Build PHP
        run: time make ${{ inputs.envTarget }}-mjs

      - name: Build php${{ inputs.phpVersion }}-sdl.so
        run: time make packages/sdl/php${{ inputs.phpVersion }}-sdl.so packages/sdl/libGL.so PHP_VERSION=${{ inputs.phpVersion }}

      - name: Cache mtimes
        run: |
          find . -type f -printf '%P %T@\n' > ./.cache/.mtimes
          sudo find . -type f -exec chmod u+rw {} \; -exec chown $USER:$USER {} \;

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-wasm-${{ inputs.libType }}-${{ inputs.envTarget }}-${{ inputs.phpVersion }}
          include-hidden-files: true
          path: |
            third_party
            lib
            packages
            .cache
